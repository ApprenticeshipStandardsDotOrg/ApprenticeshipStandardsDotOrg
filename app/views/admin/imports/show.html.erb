<% content_for(:title) { t("administrate.actions.show_resource", name: page.page_title) } %>

<header class="main-content__header" role="banner">
  <h1 id="title_id" class="main-content__page-title">
    <%= content_for(:title) %>
  </h1>

  <%= content_for(:header_middle) %>

  <div>
    <% if page.resource.is_a?(Imports::Pdf) %>
    <% if current_user.converter? %>
    <%= button_to(
          "Needs support",
          admin_import_path(page.resource),
          params: {
            imports_pdf: {status: "needs_support"},
            redirect_back_to: admin_import_path(page.resource)
          },
          method: :patch,
          class: "button",
          form_class: "form-button"
        ) %>
    <%= button_to(
          "Archive",
          admin_import_path(page.resource),
          params: {
            imports_pdf: {status: "archived"},
            redirect_back_to: admin_import_path(page.resource)
          },
          method: :patch,
          class: "button",
          form_class: "form-button"
        ) %>
    <% end %>

    <%= link_to(
          "New data import",
          new_admin_import_data_import_path(page.resource),
          class: "button"
        ) %>

    <%= link_to(
          "Convert with AI",
          new_admin_occupation_standard_path(import_id: page.resource.id),
          class: "button",
          data: {turbo_prefetch: false}
        ) %>

    <%= if accessible_action?(:redact_file, :new) && page.resource.available_for_redaction?
          link_to(
            "Redact document",
            new_admin_import_redact_file_path(page.resource),
            class: "button"
          )
        end %>
    <% end %>

    <%= if authorized_action?(page.resource, :edit)
          link_to(
            "Edit",
            edit_admin_import_path(page.resource),
            class: "button"
          )
        end %>

    <%= if authorized_action?(page.resource, :destroy)
          button_to(
            t("administrate.actions.destroy"),
            admin_import_path(page.resource),
            class: "button button--danger",
            method: :delete,
            data: {turbo_confirm: t("administrate.actions.confirm")}
          )
        end %>
  </div>

  <%= content_for(:header_last) %>
</header>

<%= content_for(:before_main) %>

<% if content_for?(:main) %>
<%= content_for(:main) %>
<% else %>
<section class="main-content__body">
  <dl>
    <% page.attributes.each do |title, attributes| %>
    <fieldset class="<%= "field-unit--nested" if title.present? %>">
      <% if title.present? %>
      <legend><%= t "helpers.label.#{page.resource_name}.#{title}", default: title %></legend>
      <% end %>

      <% attributes.each do |attribute| %>
      <% next if attribute.name.match?(/redacted|cousins/) && !page.resource.is_a?(Imports::Pdf) %>
      <% next if attribute.name == "import" && (page.resource.is_a?(Imports::Pdf) || page.resource.is_a?(Imports::DocxListing)) %>
      <% next if attribute.name == "imports" && !page.resource.is_a?(Imports::DocxListing) %>
      <% next if %w[courtesy_notification parent child type].include?(attribute.name) && current_user.converter? %>
      <dt class="attribute-label" id="<%= attribute.name %>">
        <%= t(
              "helpers.label.#{resource_name}.#{attribute.name}",
              default: page.resource.class.human_attribute_name(attribute.name)
            ) %>
      </dt>

      <dd class="attribute-data attribute-data--<%= attribute.html_class %>">
        <% if attribute.name == "parent" %>
        <% if attribute.data.is_a?(StandardsImport) %>
        <%= link_to "StandardsImport", admin_standards_import_path(attribute.data.id) %>
        <% else %>
        <%= link_to attribute.data.type, admin_import_path(attribute.data.id) %>
        <% end %>
        <% elsif attribute.name == "cousins" %>
        <% attribute.data.each do |cousin| %>
        <%= link_to cousin.filename.to_s, admin_import_path(cousin) %>
        <br>
        <% end %>
        <% elsif attribute.name == "import" %>
        <% if attribute.data %>
        <%= link_to attribute.data.type, admin_import_path(attribute.data.id) %>
        <% end %>
        <% else %>
        <%= render_field attribute, page: page %>
      </dd>
      <% end %>
      <% end %>
    </fieldset>
    <% end %>
  </dl>
</section>
<% end %>

<%= content_for(:after_main) %>
